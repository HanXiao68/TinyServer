
# 遇到的困难以及怎么解决的？

## 1.调试硬件设备和系统的部署搭建
> * 提到这个问题,确实显得很low，因为不是技术问题。上不了台面。但是，脏活累活总得有人干，由于没有师兄师姐的祖传项目，前期做了一些硬件调试的工作。例如， 调研各传感器的优缺点和参数，对多传感器系统的设计和部署。选型使用交换机将设备通信时，第三方软件总是被系统拦截，无法改IP。在多次重装系统，降低windows版本后，才解决此问题。
## 2.在写服务器时遇到的设计线程问题 和bug问题

## 3.理解ET和LT两种工作模式的原理
> * ET边缘触发和LT水平触发的概念来自于数字电路中高低电平。0表示低电平，1表示高电平。
> * 在0或者1的情况下触发的信号就是LT（Level Triggered，水平触发）
> * 在0向1、1向0变化的过程中触发的信号就是 和 ET（Edge Triggered，边沿触发）
> * 得出结论，LT是一个持续的状态，ET是个事件性的一次性状态。
> * Level Triggered模式下只要某个socket处于readable/writable状态， 无论什么时候进行epoll_wait都会返回该socket；处于一直触发的状态
> * Edge Triggered模式下只有某个socket从unreadable变为readable或 从unwritable变为writable时，epoll_wait才会返回该socket。只是在一个短暂的时刻触发。

### 普通函数与回调函数的区别：
一开始卡了很久这个概念。
对普通函数的调用：
    调用程序发出dao对普通函数的调用后，程序执行立即转向被调用函数执行，直到被调用函数执行完毕后，再返回调用程序继续执行。从发出调用的程序的角度看，这个过程为“调用-->等待被调用函数执行完毕-->继续执行”
对回调函数调用：
    调用程序发出对回调函数的调用后，不等函数执行完毕，立即返回并继续执行。这样，调用程序执和被调用函数同时在执行。当被调函数执行完毕后，被调函数会反过来调用某个事先指定函数，以通知调用程序：函数调用结束。这个过程称为回调（Callback），这正是回调函数名称的由来。

